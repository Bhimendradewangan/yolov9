# YOLOv9 with Self-Attention

# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors: 3

# gelan backbone with self-attention
backbone:
  [
   # conv down
   [-1, 1, Conv, [64, 3, 2]],  # 0-P1/2

   # conv down
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4

   # elan-1 block with self-attention
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 2
   [-1, 1, SelfAttention, [256]],  # Insert self-attention module after RepNCSPELAN4

   # avg-conv down
   [-1, 1, ADown, [256]],  # 3-P3/8

   # elan-2 block with self-attention
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 4
   [-1, 1, SelfAttention, [512]],  # Insert self-attention module after RepNCSPELAN4
  ]

# gelan head with self-attention
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 5
   [-1, 1, SelfAttention, [512]],  # Insert self-attention module after SPPELAN

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 8

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 11 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],
   [[-1, 8], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 14 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],
   [[-1, 5], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 17 (P5/32-large)

   # detect
   [[11, 14, 17], 1, DDetect, [nc]],  # DDetect(P3, P4, P5)
  ]


#......................................./////////////////////////////////
# # YOLOv9 with Attention Module

# # parameters
# nc: 80  # number of classes
# depth_multiple: 1.0  # model depth multiple
# width_multiple: 1.0  # layer channel multiple

# # anchors
# anchors: 3

# # gelan backbone with attention module
# backbone:
#   [
#    # conv down
#    [-1, 1, Conv, [64, 3, 2]],  # 0-P1/2

#    # conv down
#    [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4

#    # elan-1 block
#    [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 2

#    # attention module
#    [-1, 1, SelfAttention, [256]],  # Insert your attention module after RepNCSPELAN4

#    # avg-conv down
#    [-1, 1, ADown, [256]],  # 3-P3/8

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 4

#    # avg-conv down
#    [-1, 1, ADown, [512]],  # 5-P4/16

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 6

#    # avg-conv down
#    [-1, 1, ADown, [512]],  # 7-P5/32

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 8
#   ]

# # gelan head
# head:
#   [
#    # elan-spp block
#    [-1, 1, SPPELAN, [512, 256]],  # 9

#    # up-concat merge
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
#    [[-1, 6], 1, Concat, [1]],  # cat backbone P4

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 12

#    # up-concat merge
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
#    [[-1, 4], 1, Concat, [1]],  # cat backbone P3

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 15 (P3/8-small)

#    # avg-conv-down merge
#    [-1, 1, ADown, [256]],
#    [[-1, 12], 1, Concat, [1]],  # cat head P4

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 18 (P4/16-medium)

#    # avg-conv-down merge
#    [-1, 1, ADown, [512]],
#    [[-1, 9], 1, Concat, [1]],  # cat head P5

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 21 (P5/32-large)

#    # detect
#    [[15, 18, 21], 1, DDetect, [nc]],  # DDetect(P3, P4, P5)
#   ]

#......................................////////////////////////////////////
# YOLOv9 with Attention Mechanism

# # parameters
# nc: 80  # number of classes
# depth_multiple: 1.0  # model depth multiple
# width_multiple: 1.0  # layer channel multiple

# # anchors
# anchors: 3

# # gelan backbone
# backbone:
#   [
#    # conv down
#    [-1, 1, Conv, [64, 3, 2]],  # 0-P1/2

#    # conv down
#    [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4

#    # elan-1 block
#    [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 2

#    # avg-conv down
#    [-1, 1, ADown, [256]],  # 3-P3/8

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 4

#    # avg-conv down
#    [-1, 1, ADown, [512]],  # 5-P4/16

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 6

#    # avg-conv down
#    [-1, 1, ADown, [512]],  # 7-P5/32

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 8
#   ]

# # gelan head
# head:
#   [
#    # elan-spp block
#    [-1, 1, SPPELAN, [512, 256]],  # 9

#    # attention mechanism
#    [-1, 1, Attention_Layer, [512]],  # Add attention layer

#    # up-concat merge
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
#    [[-1, 6], 1, Concat, [1]],  # cat backbone P4

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 12

#    # up-concat merge
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
#    [[-1, 4], 1, Concat, [1]],  # cat backbone P3

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 15 (P3/8-small)

#    # avg-conv-down merge
#    [-1, 1, ADown, [256]],
#    [[-1, 12], 1, Concat, [1]],  # cat head P4

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 18 (P4/16-medium)

#    # avg-conv-down merge
#    [-1, 1, ADown, [512]],
#    [[-1, 9], 1, Concat, [1]],  # cat head P5

#    # elan-2 block
#    [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 21 (P5/32-large)

#    # detect
#    [[15, 18, 21], 1, DDetect, [nc]],  # DDetect(P3, P4, P5)
#   ]
